from statistics_funcs import *


# to avoid issues with circular imports it was encapsulated in a function:
def get_charts_specs(gdfs_dict):
    return {
        "sidewalks": {
            "sidewalks_smoothness_x_surface": {
                "function": create_double_mat_and_bar,
                "params": {
                    "input_df": gdfs_dict.get("sidewalks"),
                    "title": "Surface x Smoothness (sidewalks)",
                    "xs": "surface",
                    "ys": "smoothness",
                    "scolor": None,
                    "xh": "count()",
                    "yh1": "surface",
                    "yh2": "smoothness",
                    "hcolor": "age",
                    "fontsize": 24,
                },
                "title": "Surface x Smoothness",
                "explanation": f"This chart allows you to visualize the relationship between the {surface_link} type and the {smoothness_link} condition of the sidewalks.",
            },
            "sidewalks_surface": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("sidewalks"),
                    "fieldname": "surface",
                    "title": "Sidewalks Surface Type",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Surface Type",
                "explanation": f"This chart allows you to visualize the different {surface_link} types of the sidewalks.",
            },
            "sidewalks_smoothness": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("sidewalks"),
                    "fieldname": "smoothness",
                    "title": "Sidewalks Smoothness Condition",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Smoothness Condition",
                "explanation": f"This chart allows you to visualize the different {smoothness_link} conditions of the sidewalks.",
            },
            "sidewalks_tactile_paving": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("sidewalks"),
                    "fieldname": "tactile_paving",
                    "title": "Sidewalks Tactile Paving Presence",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Tactile Paving Presence",
                "explanation": f"This chart allows you to visualize the different {tactile_paving_link} conditions of the sidewalks.",
            },
            "sidewalks_width": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("sidewalks"),
                    "fieldname": "width",
                    "title": "Sidewalks Width Values",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Width Values",
                "explanation": f"This chart allows you to visualize the different {width_link} values of the sidewalks.",
            },
            "sidewalks_incline": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("sidewalks"),
                    "fieldname": "incline",
                    "title": "Sidewalks Incline Values",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Incline Values",
                "explanation": f"This chart allows you to visualize the different {incline_link} values of the sidewalks.",
            },
            "sidewalks_age": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("sidewalks"),
                    "column": "age",
                    "boxplot_title": "Sidewalks Update Age (Years)",
                    "color_field": "smoothness",
                    "height": 200,
                    # "tooltip_fields": ["id"],
                },
                "title": "Update Age",
                "explanation": f"This chart allows you to visualize the distribution of the time since the last update of the sidewalk features.",
            },
            "sidewalks_length": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("sidewalks"),
                    "column": "length(km)",
                    "boxplot_title": "Sidewalks Length (km)",
                    # "tooltip_fields": ["id"],
                    "maxbins": 50,
                },
                "title": "Length (km)",
                "explanation": f"This chart allows you to visualize the distribution of the length of the sidewalks in kilometers.",
            },
            "sidewalks_n_revs": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("sidewalks"),
                    "column": "n_revs",
                    "boxplot_title": "Sidewalks Number of Revisions",
                    "color_field": "smoothness",
                    "height": 200,
                    # "tooltip_fields": ["id"],
                },
                "title": "Number of Revisions",
                "explanation": f"This chart allows you to visualize the distribution of the number times that the sidewalks have been edited.",
            },
        },
        "crossings": {
            "crossing_types": {
                "function": create_barchart,
                "params": {
                    "input_df": gdfs_dict.get("crossings"),
                    "fieldname": "crossing",
                    "title": "Crossing Type",
                },
                "title": "Crossing Type",
                "explanation": f"This chart allows you to visualize the different {crossing_link} types of the crossings.",
            },
            "crossing_surface": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("crossings"),
                    "fieldname": "surface",
                    "title": "Crossings Surface Type",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Surface Type",
                "explanation": f"This chart allows you to visualize the different {surface_link} types of the crossings.",
            },
            "crossings_smoothness_x_surface": {
                "function": create_double_mat_and_bar,
                "params": {
                    "input_df": gdfs_dict.get("crossings"),
                    "title": "Surface x Smoothness (crossings)",
                    "xs": "surface",
                    "ys": "smoothness",
                    "scolor": None,
                    "xh": "count()",
                    "yh1": "surface",
                    "yh2": "smoothness",
                    "hcolor": "crossing",
                    "fontsize": 24,
                },
                "title": "Surface x Smoothness",
                "explanation": f"This chart allows you to visualize the relationship between the {surface_link} type and the {smoothness_link} condition of the crossings.",
            },
            "crossings_length": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("crossings"),
                    "column": "length(km)",
                    "boxplot_title": "Crossings Length (km)",
                    "color_field": "crossing",
                    # "tooltip_fields": ["id"],
                    "maxbins": 50,
                },
                "title": "Length (km)",
                "explanation": f"This chart allows you to visualize the distribution of the length of the crossings in kilometers.",
            },
            "crossings_age": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("crossings"),
                    "column": "age",
                    "boxplot_title": "Crossings Update Age (Years)",
                    "color_field": "crossing",
                    "height": 200,
                    # "tooltip_fields": ["id"],
                },
                "title": "Update Age",
                "explanation": f"This chart allows you to visualize the distribution of the time since the last update of the crossing features.",
            },
            "crossings_n_revs": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("crossings"),
                    "column": "n_revs",
                    "color_field": "crossing",
                    "height": 200,
                    "boxplot_title": "Crossings Number of Revisions",
                    # "tooltip_fields": ["id"],
                },
                "title": "Number of Revisions",
                "explanation": f"This chart allows you to visualize the distribution of the number times that the crossings have been edited.",
            },
        },
        "kerbs": {
            "kerbs_x_paving_x_wheelchair": {
                "function": create_double_mat_and_bar,
                "params": {
                    "input_df": gdfs_dict.get("kerbs"),
                    "title": "Kerb x Tactile Paving x Wheelchair Acess.",
                    "xs": "kerb",
                    "ys": "tactile_paving",
                    "scolor": None,
                    "xh": "count()",
                    "yh1": "kerb",
                    "yh2": "tactile_paving",
                    "hcolor": "wheelchair",
                    "fontsize": 24,
                },
                "title": "Surface x Smoothness",
                "explanation": f"This chart allows you to visualize the relationship between the {kerb_link} type and the {smoothness_link} condition of the kerbs.",
            },
            "kerb_types": {
                "function": create_barchart,
                "params": {
                    "input_df": gdfs_dict.get("kerbs"),
                    "fieldname": "kerb",
                    "title": "Kerb Type",
                },
                "title": "Kerb Type",
                "explanation": f"This chart allows you to visualize the different {kerb_link} types of the kerbs.",
            },
            "kerb_tactile_paving": {
                "function": create_barchart,
                "params": {
                    "input_df": gdfs_dict.get("kerbs"),
                    "fieldname": "tactile_paving",
                    "title": "Kerb Tactile Paving Presence",
                },
                "title": "Tactile Paving Presence",
                "explanation": f"This chart allows you to visualize the different {tactile_paving_link} types existing on kerbs.",
            },
            "kerb_wheelchair_access": {
                "function": create_barchart,
                "params": {
                    "input_df": gdfs_dict.get("kerbs"),
                    "fieldname": "wheelchair",
                    "title": "Kerb Wheelchair Acessibility",
                },
                "title": "Wheelchair Acessibility",
                "explanation": f"This chart allows you to visualize the different {wheelchair_link} levels of access reported on kerbs.",
            },
            "kerbs_surface": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("kerbs"),
                    "fieldname": "surface",
                    "title": "Kerbs Surface Type",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                    "len_field": None,
                },
                "title": "Surface Type",
                "explanation": f"This chart allows you to visualize the different types of {surface_link} present on kerbs.",
            },
            "kerbs_age": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("kerbs"),
                    "column": "age",
                    "boxplot_title": "Kerbs Update Age (Years)",
                    # "tooltip_fields": ["id"],
                    "color_field": "wheelchair",
                    "height": 200,
                },
                "title": "Update Age",
                "explanation": f"This chart allows you to visualize the distribution of the time since the last update of the kerb features.",
            },
            "kerbs_n_revs": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("kerbs"),
                    "column": "n_revs",
                    "boxplot_title": "Kerbs Number of Revisions",
                    "color_field": "smoothness",
                    "height": 200,
                    # "tooltip_fields": ["id"],
                },
                "title": "Number of Revisions",
                "explanation": f"This chart allows you to visualize the distribution of the number times that the kerbs have been edited.",
            },
        },
        "other_footways": {
            "other_footways_subcategory": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("other_footways"),
                    "fieldname": oswm_footway_fieldname,
                    "title": "Sub-category (Layer)",
                },
                "title": "Subcategory",
                "explanation": f"This chart allows you to visualize the different types (layer) of the other footways.",
            },
            "other_footways_smoothness_x_surface": {
                "function": create_double_mat_and_bar,
                "params": {
                    "input_df": gdfs_dict.get("other_footways"),
                    "title": "Surface x Smoothness (other_footways)",
                    "xs": "surface",
                    "ys": "smoothness",
                    "scolor": oswm_footway_fieldname,
                    "xh": "count()",
                    "yh1": "surface",
                    "yh2": "smoothness",
                    "hcolor": oswm_footway_fieldname,
                    "fontsize": 24,
                },
                "title": "Surface x Smoothness",
                "explanation": f"This chart allows you to visualize the relationship between the {surface_link} type and the {smoothness_link} condition of the other footways, different layers are represented by different colors.",
            },
            "other_footways_surface": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("other_footways"),
                    "fieldname": "surface",
                    "title": "Other Footways Surface Type",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Surface Type",
                "explanation": f"This chart allows you to visualize the different types of {surface_link} present on other footways.",
            },
            "other_footways_smoothness": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("other_footways"),
                    "fieldname": "smoothness",
                    "title": "Other Footways Smoothness",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Smoothness",
                "explanation": f"This chart allows you to visualize the different levels of {smoothness_link} present on other footways.",
            },
            "other_footways_length": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("other_footways"),
                    "column": "length(km)",
                    "boxplot_title": "Other Footways Length (km)",
                    "color_field": oswm_footway_fieldname,
                    "height": 200,
                    # "tooltip_fields": ["id"],
                    "maxbins": 50,
                },
                "title": "Length (km)",
                "explanation": f"This chart allows you to visualize the distribution of the length of the other footways.",
            },
            "other_footways_age": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("other_footways"),
                    "column": "age",
                    "boxplot_title": "Other Footways Update Age (Years)",
                    "color_field": oswm_footway_fieldname,
                    "height": 200,
                },
                "title": "Update Age",
                "explanation": f"This chart allows you to visualize the distribution of the time since the last update of the other footways.",
            },
            "other_footways_n_revs": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("other_footways"),
                    "column": "n_revs",
                    "boxplot_title": "Other Footways Number of Revisions",
                    "color_field": oswm_footway_fieldname,
                    "height": 200,
                    # "tooltip_fields": ["id"],
                },
                "title": "Number of Revisions",
                "explanation": f"This chart allows you to visualize the distribution of the number of revisions of the other footways.",
            },
        },
        "all_data": {
            "all_data_category": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("all_data"),
                    "fieldname": "category",
                    "title": "All-Category Layers Feature Count",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                    "len_field": None,  # it works for count
                    "color_field": "length(km)",
                    # "filter_out_opt": None, # TODO!
                    # "excluding_categories": ["kerbs"],  # include "pedestrian_areas" ?
                },
                "title": "Layer Feature Count",
                "explanation": f"This chart allows you to visualize the number of features in each layer of the data, featuring also the length of each in different shades. Keep in mind that kerbs have no length and pedestrian areas have their perimeter represented.",
            },
            "all_data_surface": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("all_data"),
                    "fieldname": "surface",
                    "title": "All-Category Surface Type",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Surface Type",
                "explanation": f"This chart allows you to visualize the different types of {surface_link} present in the whole data.",
            },
            "all_data_smoothness": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("all_data"),
                    "fieldname": "smoothness",
                    "title": "All-Category Smoothness Condition",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Smoothness Condition",
                "explanation": f"This chart allows you to visualize the different levels of {smoothness_link} present in the whole data.",
            },
            "all_data_tactile_paving": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("all_data"),
                    "fieldname": "tactile_paving",
                    "title": "All-Category Tactile Paving Presence",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Tactile Paving Presence",
                "explanation": f"This chart allows you to visualize the reported presence of {tactile_paving_link} in the whole data.",
            },
            "all_data_lit": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("all_data"),
                    "fieldname": "lit",
                    "title": "All-Category Lighting Status",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                },
                "title": "Lighting Status",
                "explanation": f"This chart allows you to visualize the different lighting ({lit_link}) conditions in the whole data.",
            },
            "all_data_traffic_calming": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("all_data"),
                    "fieldname": "traffic_calming",
                    "title": "All-Category Traffic Calming Presence",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                    "len_field": None,  # it works for count
                    "color_field": "length(km)",
                },
                "title": "Traffic Calming Status",
                "explanation": f"This chart allows you to visualize the reported presence of {traffic_calming_link} in the whole data.",
            },
            "all_data_wheelchair_tag": {
                "function": create_barchartV2,
                "params": {
                    "input_gdf": gdfs_dict.get("all_data"),
                    "fieldname": "wheelchair",
                    "title": "All-Category Traffic wheelchair=* tag",
                    "str_to_append": " type",
                    "title_fontsize": 24,
                    "len_field": None,  # it works for count
                    "color_field": "length(km)",
                },
                "title": "wheelchair=*",
                "explanation": f"This chart allows you to visualize the reported levels of {wheelchair_link} accessibility in the whole data.",
            },
            "all_data_age": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("all_data"),
                    "column": "age",
                    "boxplot_title": "All-Category Update Age (Years)",
                    "color_field": "category",
                    "height": 200,
                },
                "title": "Update Age",
                "explanation": f"This chart allows you to visualize the distribution of the age of the data in years, differencing categories by color.",
            },
            "all_data_n_revs": {
                "function": create_linked_boxplot_histogram,
                "params": {
                    "df": gdfs_dict.get("all_data"),
                    "column": "n_revs",
                    "boxplot_title": "All-Category Number of Revisions",
                    "color_field": "category",
                    "maxbins": 30,
                    "height": 200,
                    # "tooltip_fields": ["id"],
                },
                "title": "Number of Revisions",
                "explanation": f"This chart allows you to visualize the distribution of the number of revisions of the data, differencing categories by color.",
            },
        },
    }
